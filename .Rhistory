head(males)
tail(females)
under23_and_smoke <- subset(cdc, cdc$age < 23 & cdc$smoke100 > 0)
boxplot(cdc$weight)
boxplot(cdc$height)
summary(cdc$height)
summary(cdc$height ~ cdc$gender)
boxplot(cdc$height ~ cdc$gender)
bmi = (cdc$weight / cdc$height^2)*703
summary(bmi)
boxplot(bmi ~ cdc$gender)
boxplot(bmi ~ cdc$genhlth)
barplot(bmi ~ cdc$genhlth)
boxplot(bmi ~ cdc$genhlth)
barplot(bmi)
boxplot(bmi ~ cdc$genhlth)
boxplot(bmi ~ cdc$gender)
boxplot(bmi ~ cdc$exerany)
boxplot(bmi ~ cdc$age > 40)
boxplot(bmi ~ cdc$age > 60)
boxplot(bmi ~ cdc$age > 50)
hist(bmi)
hist(cdc$age)
hist(bmi)
hist(bmi, breaks=50)
hist(bmi)
hist(bmi, breaks=50)
plot(cdc$weight, cdc$wtdesire)
lm(cdc$weight, cdc$wtdesire)
plot
plot(cdc$weight, cdc$wtdesire, lm)
plot(cdc$weight, cdc$wtdesire, lm(mean))
plot(cdc$weight, cdc$wtdesire)
qnorm(50, 45, 3.2)
pnorm(50, 45, 3.2)
qnorm(0.2, 77, 5)
dbinom(8,10,.13)
q()
sum(dbinom(70:245, size=245, p=0.25))
p<-0.25
1-p
n<-10/p
n
10/0.75
40/0.75
dbinom(2,10,0.56)
dbinom
dbinom(60,100,0.56)
sum(dbinom(60:100,100, 0.56))
z
zscore
dbinom(92,100,0.9)
sum(dbinom(0:35,3000000,0.99999))
dbinom
dbinom(35,3000000,0.00001)
sum(dbinom(35:3000000,3000000,0.00001))
nnorm
pnorm
sum(dbinom(1:10,10,0.07))
sum(dbinom(35:3000000,3000000,0.00001))
q()
source("http://www.openintro.org/stat/data/present.R")
present
str(present)
head(present)
View(present)
names(present)
dim(present)
present$girls
sum(present$girls)
plot(present$year, present$girls)
hist(present$boys+present$girls)
hist(present$boys+present$girls ~ present$year)
hist
plot(present$year, present$boys+present$girls)
present[1960]
present[,1960]
present[1960,,]
present[births] <- present$girls + present$boys
present$births <- present$girls + present$boys
view(present)
View(present)
plot(present$year, present$births)
hist(present$births)
plot(present$year, present$births)
plot(present$year, present$boys)
plot(present$year, present$births)
plot(present$year, present$boys)
plot(present$year, present$girls)
plot(present$year, present$boys)
plot(present$year, present$boys/present$births)
present$delta <- present$boys - present$girls
View(present)
sum(present$delta < 0)
plot(present$year, present$delta)
plot(present$year,present$girls/present$births)
plot(present$year,present$boys/present$births)
plot(present$year,present$boys/present$girls)
plot(present$year,present$delta)
plot(present$year,present$delta/10000)
plot(present$year,present$delta/1000)
load(url("http://www.openintro.org/stat/data/kobe.RData"))
head(kobe)
View(kobe)
kobe$basket[1:9]
kobe_streak<-calc_streak(kobe$basket)
barplot(kobe_streak)
median(kobe_streak)
boxplot(kobe_streak)
barplot(kobe_streak)
boxplot(kobe_streak)
outcomes<-c("h","t")
sample(outcomes, 1, TRUE)
sample(outcomes, 1, TRUE)
sample(outcomes, 1, TRUE)
sample(outcomes, 1, TRUE)
sample(outcomes, 1, TRUE)
sim_fair_coin<-sample(outcomes, 100, TRUE)
sim_fair_coin
table(sim_fair_coin)
table(present)
table(present$boys)
sim_fair_coin<-sample(outcomes, 100, TRUE, prob(0.2,0.8))
sim_fair_coin<-sample(outcomes, 100, TRUE, prob=c(0.2,0.8))
table(sim_fair_coin)
outcomes<-c("H","M")
sim_basket<-sample(outcomes, 133, prob=c(0.45,0.55))
sim_basket<-sample(outcomes, 133, TRUE, prob=c(0.45,0.55))
kobe$basket
sim_basket
sim_streak<-calc_streak(sim_basket)
sim_streak
barplot(sim_streak)
barplot(kobe$streak)
barplot(kobe_streak)
barplot(sim_streak)
boxplot(sim_streak)
boxplot(kobe_streak)
boxplot(sim_streak)
plot(sim_streak)
sim_streak
barplot(kobe_streak)
barplot(sim_streak)
length(kobe_streak)
length(sim_streak)
dim(kobe_streak)
table(sim_streak)
table(kobe_streak)
kobe_streak
barplot(kobe_streak)
barplot(sim_streak)
housing <- read.table("http://archive.ics.uci.edu/ml/machine-learning-databases/housing/housing.data")[, c(6, 14)]
head(housing)
names(housing) <- c("num.rooms", "median.values")
plot(housing)
housing.lm <- lm(median.values ~ num.rooms, data=housing)
plot(housing)
abline(housing.lm)
summary(hosuing.lm)
summary(housing.lm)
summary(housing.lm)
abline(0, 5, col="red")
abline
q()
load(url("http://bit.ly/dasi_gss_data"))
View(gss)
table(gss$joblose)
table(gss$satjob)
table(gss$jobfind)
table(gss$relig)
pnorm(1.392, 130, 17)
pnorm(1.392, 130, 2.87)
pnorm(134, 130, 17)
pnorm(134, 130, 2.87)
q()
args('rnorm')
?gbm
search('gbm')
q()
q()
install.package('KernSmooth')
install.packages('KernSmooth')
library(KernSmooth)
library(swirl)
swirl()
5+7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
mysqrt <- sqrt(z-1)
mySqrt <- sqrt(z-1)
mySqrt
myDiv <- z / mySqrt
myDiv
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(1, 20, by=0.5)
seq(1, 10, by=0.5)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "sarat")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1, 2, 3), c("X", "Y", "Z"), sep = "")
paste(c(1:3), c("X", "Y", "Z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
myData <- sample(c(y, z), 100)
myNA <- is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo, "bar)]
vect[c("foo, "bar"")]
vect[c("foo", "bar")]
myvector <- 1:20
myVector <- 1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <- c(4, 5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix
myMatrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(myMatrix, myMatrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, myMatrix)
myData <- data.frame(patients, myMatrix)
myData
class(myData)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(myData) <- cnames
myData
bye()
exit()
library(xml)
library(XML)
balt = xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal=TRUE)
?xmlTreeParse
balt = xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal=TRUE, isURL=TRUE)
xmlTreeParse
balt = xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternalNodes=TRUE, isURL=TRUE)
balt = xmlTreeParse("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternalNodes=TRUE, isURL=TRUE)
str(balt)
rootnode = XmlRoot(balt)
rootnode = xmlRoot(balt)
xmlName(rootnode)
names(rootnode)
rootnode[[1]]
rootnode[[1]][[1]]
xpathSApply(rootnode, "//zipcode", xmlValue)
zips = xpathSApply(rootnode, "//zipcode", xmlValue)
str(zips)
length(zips["21231"])
zips = xpathSApply(rootnode, "//zipcode='21231'", xmlValue)
str(zips)
sum(zips)
zips = xpathSApply(rootnode, "/zipcode='21231'", xmlValue)
str(zips)
sum(zips)
?xpathSApply
?seq
hx = seq(0,1,0.001)
?plot
y = -(1 - log(hx))
plot(hx, y)
y = -log(1 - (hx))
plot(hx, y)
y = log(1 - (hx))
plot(hx, y)
y = log((hx))
plot(hx, y)
y = -log(1 - (hx))
plot(hx, y)
str(myData)
plot(myData)
library(httr)
oauth_endpoints("github")
?oauth_endpoints
?oauth_app
myapp <- oauth_app("github", a31913e09b658f554ee9, 2de4fa8ef151778e8a6f9335a4af86b23fae690e)
myapp <- oauth_app("github", "a31913e09b658f554ee9"", "2de4fa8ef151778e8a6f9335a4af86b23fae690e"")
myapp <- oauth_app("github", "a31913e09b658f554ee9", "2de4fa8ef151778e8a6f9335a4af86b23fae690e")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
library(httpuv)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
?oauth2.0_token
library(httr)
library(httpuv)
oauth_endpoints("github")
myapp <- oauth_app("github", "6ab7bea94fe00fd31096", "180effb704344790486564f63c01ef8e77afc3d6")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
content(req)
library(jsonLite)
install.packages("jsonLite")
install.packages("jsonlite")
library(jsonlite)
library(jsonLite)
library(jsonlite)
?jsonlite
??jsonlite
install.packages("jsonlite")
library(jsonlite)
q()
install.packages("installr")
require(installr)
updateR()
q()
data <- read.table("https://s3.amazonaws.com/coursera-uploads/user-608227cff796928eb51533ce/972080/asst-3/ad3836a0cdf911e3a30ab3761bd8b248.txt")
data <- read.table("http://s3.amazonaws.com/coursera-uploads/user-608227cff796928eb51533ce/972080/asst-3/ad3836a0cdf911e3a30ab3761bd8b248.txt")
str(data)
View(data)
data <- read.table("http://s3.amazonaws.com/coursera-uploads/user-3bf801a9406881af23395ab7/972080/asst-3/49d62200cde211e389e75b2f19948245.txt")
View(data)
data <- read.table("http://s3.amazonaws.com/coursera-uploads/user-d9754d07d6ea5d78a768a2c2/972080/asst-3/f1601830ce0211e3a98a0101a16d1137.txt")
View(data)
data <- read.table("http://s3.amazonaws.com/coursera-uploads/user-4af559b546f8eb1d23b6f2b9/972080/asst-3/d62cdd50cdc611e3ad1941beac05b4fe.txt")
View(data)
names(data)[9]
names(data)[10]
data <- read.table("http://s3.amazonaws.com/coursera-uploads/user-09cefccd2798f813edbc92e9/972080/asst-3/425b89b0cdca11e39fe8216c14c59133.txt")
View(data)
data <- read.table("http://s3.amazonaws.com/coursera-uploads/user-4012d300aaed79831a87ab30/972080/asst-3/04797740ce5811e389e75b2f19948245.txt")
setwd("C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1")
?read.csv.sql
requires(sqldf)
require(sqldf)
?read.csv.sql
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/loadData.R')
data <- load.data("../household_power_consumption.txt")
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/loadData.R')
data <- load.data("../household_power_consumption.txt")
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/loadData.R')
data <- load.data("../household_power_consumption.txt")
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/loadData.R')
data <- load.data("../household_power_consumption.txt")
str(data)
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/loadData.R')
?paste
?strptime
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/loadData.R')
data <- load.data("../household_power_consumption.txt")
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/loadData.R')
data <- load.data("../household_power_consumption.txt")
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/loadData.R')
data <- load.data("../household_power_consumption.txt")
?read.csv.sql
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/loadData.R')
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/loadData.R')
data <- load.data("../household_power_consumption.txt")
?close
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/loadData.R')
?close
data <- load.data("../household_power_consumption.txt")
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/loadData.R')
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/loadData.R')
data <- load.data("../household_power_consumption.txt")
str(data)
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/loadData.R')
data <- load.data("../household_power_consumption.txt")
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/loadData.R')
str(data)
data <- load.data("../household_power_consumption.txt")
str(data)
hist(data$Global_active_power, col="red")
summary(data)
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/loadData.R')
data <- load.data("../household_power_consumption.txt")
?na.missing
?missing.na
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/loadData.R')
data <- load.data("../household_power_consumption.txt")
?sqldf
sqldf()
sqldf()
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/loadData.R')
data <- load.data("../household_power_consumption.txt")
sqldf()
sqldf()
sqldf()
str(data)
?hist
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/plot1.R')
?Devices
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/plot1.R')
plot(data$DateTime, data$Global_active_power, type="l")
plot(data$DateTime, data$Global_active_power, type="l", xlab="", ylab="Global Active Power (kilowatts)")
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/plot2.R')
plot(data$DateTime, data$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(data$DateTime, data$Sub_metering_2, col="red")
lines(data$DateTime, data$Sub_metering_3, col="blue")
?legend
leg = c("Sub_metering_3", "Sub_metering_2", "Sub_metering_3")
legend("righttop", legend=leg)
legend("topright", legend=leg)
legend("topright", legend=leg, col=c(1,2,3))
legend("topright", legend=leg, col=c("black","red","blue"))
legend("topright", legend=leg, col=c("black","red","blue"), seg.len = 5)
legend("topright", legend=leg, pch = "---", col=c("black","red","blue"), seg.len = 5)
legend("topright", legend=leg, pch = "---", col=c("black","red","blue"))
legend("topright", legend=leg, pch = "---")
legend("topright", legend=leg, pch = "---", col=c("black","red","blue"))
legend("topright", legend=leg, col=c("black","red","blue"))
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/plot3.R')
legend("topright", legend=leg, col=c("black","red","blue"))
legend("topright", legend=leg, col=c("black","red","blue"), pch="-")
legend("topright", legend=leg, col=c("black","red","blue"), pch="-", cex=5)
plot(data$DateTime, data$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(data$DateTime, data$Sub_metering_2, col="red")
lines(data$DateTime, data$Sub_metering_3, col="blue")
legend("topright", legend=leg, col=c("black","red","blue"), pch="-", lwd=5)
legend("topright", legend=leg, col=c("black","red","blue"), pch="-", lwd=2)
legend("topright", legend=leg, col=c("black","red","blue"), pch="-", lwd=3)
legend("topright", legend=leg, col=c("black","red","blue"), pch="-", lwd=1)
plot(data$DateTime, data$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(data$DateTime, data$Sub_metering_2, col="red")
lines(data$DateTime, data$Sub_metering_3, col="blue")
legend("topright", legend=leg, col=c("black","red","blue"), pch="-", lwd=1)
legend("topright", legend=leg, col=c("black","red","blue"), pch="-", lwd=1,lty=1)
legend("topright", legend=leg, col=c("black","red","blue"), lwd=1,lty=1)
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/plot3.R')
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/plot3.R')
?par
par(mfrow=c(2,2))
plot(data$DateTime, data$Global_active_power,
type="l",
xlab="",
ylab="Global Active Power (kilowatts)")
plot(data$DateTime, data$Voltage,
type="l",
xlab="datetime",
ylab="Voltage")
plot(data$DateTime, data$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(data$DateTime, data$Sub_metering_2, col="red")
lines(data$DateTime, data$Sub_metering_3, col="blue")
leg = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
legend("topright", legend=leg, col=c("black","red","blue"), lwd=1,lty=1)
View(data)
plot(data$DateTime, data$Global_reactive_power,
type="l",
xlab="",
ylab="Global Active Power (kilowatts)")
par(mfrow=c(2,2))
plot(data$DateTime, data$Global_active_power, type="l", xlab="", ylab="Global Active Power")
plot(data$DateTime, data$Voltage, type="l", xlab="datetime", ylab="Voltage")
plot(data$DateTime, data$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(data$DateTime, data$Sub_metering_2, col="red")
lines(data$DateTime, data$Sub_metering_3, col="blue")
leg = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
legend("topright", legend=leg, col=c("black","red","blue"), lwd=1,lty=1)
plot(data$DateTime, data$Global_reactive_power, type="l", xlab="", ylab="Global_reactive_power")
source('C:/Coursera/Data Science - Specialization/Exploratory Data Analysis/Assignments/ExData_Plotting1/plot4.R')
